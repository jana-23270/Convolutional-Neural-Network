# -*- coding: utf-8 -*-
"""CNN using cifar10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gCMTq2D6nMs6Kkbf64QE-0SRk7qHmDtO
"""

!pip install tensorflow

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers,datasets,models
import matplotlib.pyplot as plt

ci = keras.datasets.cifar10
(x_train,y_train),(x_test,y_test)= ci.load_data()

x_train , x_test = x_train/255.0 , x_test/255.0

class_names = ['airplane', 'automobiles ','bird','cat','deer','dog','frog','horse','ship','truck']

plt.figure(figsize = (8,8))
for i in range(25):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(x_train[i])
  plt.xlabel(class_names[y_train[i][0]])
plt.show()

model = models.Sequential()
model.add(layers.Conv2D(32,(3,3), activation = 'relu', input_shape=(32,32,3)))
model.add(layers.MaxPooling2D(2,2))
model.add(layers.Conv2D(63,(3,3),activation='relu'))
model.add(layers.MaxPooling2D(2,2))
model.add(layers.Conv2D(63,(3,3),activation='relu'))

model.summary()

model.add(layers.Flatten())
model.add(layers.Dense(64, activation = 'relu'))
model.add(layers.Dense(10))

model.summary()

model.compile(optimizer = 'adam',
              loss = 'sparse_categorical_crossentropy',
              metrics=['accuracy'])

history = model.fit(x_train,y_train, epochs=5, validation_split=0.3)

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('model accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['training data','validation data'], loc = 'upper right')

test_loss, test_acc = model.evaluate(x_test,
                              y_test,
                              verbose=2)

print(test_loss)

print(test_acc)